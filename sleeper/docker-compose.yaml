services:
    reservation:
        build:
            context: .
            dockerfile: ./apps/reservation/Dockerfile
            target: development
        command: npm run start:dev reservation
        env_file: 
            - ./apps/reservation/.env
        ports:
            - '3000:3000'
        volumes:
            - .:/usr/src/app
        depends_on:
            - db

    payments:
        build:
            context: .
            dockerfile: ./apps/payments/Dockerfile
            target: development
        command: npm run start:dev payments
        env_file: 
            - ./apps/payments/.env
        ports:
            - '3002:3002'
        volumes:
            - .:/usr/src/app
        depends_on:
            - db

    auth:
        build:
            context: .
            dockerfile: ./apps/auth/Dockerfile
            target: development
        command: npm run start:dev auth
        env_file:
            - ./apps/auth/.env
        ports:
            - '3001:3001'
        volumes:
            - .:/usr/src/app
        depends_on:
            - db

    db:
        image: postgres
        container_name: db
        restart: always
        shm_size: 128mb
        ports:
            - '5433:5432'
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=test
        volumes:
            - postgres_data:/var/lib/postgresql/data
            # - ./db-init:/docker-entrypoint-initdb.d

volumes:
    postgres_data:
